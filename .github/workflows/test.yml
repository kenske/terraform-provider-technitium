# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  push:
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_wrapper: false
      - run: make generate
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'make generate' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      technitium:
        # Replace with the correct Docker image for your Technitium DNS server
        image: technitium/dns-server:13.6.0
        # Map port 5380 on the host to port 5380 in the container
        ports:
          - 5380:5380
        env:
          DNS_SERVER_DOMAIN: dns-server
          DNS_SERVER_ADMIN_PASSWORD: password

        # Wait for the service to be healthy before starting the test steps
        options: >-
          --health-cmd "curl -f http://localhost:5380/api/user/login?user=admin&pass=password || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    

    strategy:
      fail-fast: false
      matrix:
        opentofu:
          - '1.9.*'
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ matrix.opentofu }}
          tofu_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          TECHNITIUM_HOST: http://technitium:5380
        run: go test -v -cover ./internal/provider/
        timeout-minutes: 10
